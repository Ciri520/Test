<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="test">
	<select id="findUserById" parameterType="int" resultType="domain.User">
		select * from user where id = #{id}
	</select>
	<!-- 自定义条件查询用户列表 -->
	<!-- 注意：如果是取简单数量类型的参数，括号中的值必须为value -->
	<select id="findUserByUsername" parameterType="String" resultType="domain.User">
		select * from user where username like '%${value}%'
	</select>
	<!-- 添加用户 -->
	<!-- 通过修改sql映射文件，可以将mysql自增主键返回： -->
	<!-- keyPropertyd:返回的主键存放在pojo中的那个属性中 -->
	<!-- order:selectKey的执行顺序,是相对于insert来说的由于mysql的自增原理执行完insert语句之后才将主键生成，
	所以这里selectKey的执行顺序为after -->
	<!-- resultType:返回的主键是什么类型 -->
	<!-- LAST_INSERT_ID():是mysql的函数，返回auto_increment自增列新记录id值。 -->
	<insert id = "insertUser" parameterType = "domain.User">
		<!-- selectKey将主键返回,需要在返回 -->
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			select LAST_INSERT_ID()
		</selectKey>
		insert into user(username,birthday,sex,address) values(#{username},#{birthday},#{sex},#{address})
	</insert>
	
	<insert id = "insertUserUuid" parameterType = "domain.User" >
		<!-- selectKey将主键返回,需要在返回 -->
		<selectKey  order="BEFORE" resultType="string" keyProperty="id">
			select uuid()
		</selectKey>
		insert into user(username,birthday,sex,address) values(#{username},#{birthday},#{sex},#{address})
	</insert>
	
	<!-- 删除用户 -->
	<delete id="deleteUserById" parameterType="int">
		delete from user where id=#{id}
	</delete>
	<!-- 修改用户 -->
	<update id = "updateUser" parameterType="domain.User">
		update user set username=#{username},birthday=#{birthday},sex=#{sex},address=#{address}
		where id=#{id}
	</update>
	
</mapper>
